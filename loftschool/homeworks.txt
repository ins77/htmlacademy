События:
1. Переделать тестовое задание (аккордеон) с применением делегирования.
2. Создать страницу с кнопкой. При клике на кнопку, на странице должен создаваться div произвольных размеров, в произвольном месте.
Цвет фона div'а должен быть каждый раз случайным.
Созданные div'ы можно перетаскивать мышкой (drag & drop)



DOM:
# ДЗ - 1
Создать модуль, который экспортирует функцию `prepend`
prepend имеет два параметра, в которые нужно передать элементы
Задача функции - вставить второй элемент в начало первого. Например:
`prepend(container, newElement)` - newElement должен быть добавлен в начало элемента container.
# ДЗ - 2
Создать модуль, который экспортирует функцию `deleteTextNodes`
Эта функция принимает на вход элемент и должна удалить все текстовые узлы внутри указанного элемента.
Функция может работать не рекурсивно, то есть не заходить внутрь дочерних элементов контейнера.
# ДЗ - 3(со звездочкой)
Реалзиовать функцию, описанную в ДЗ 2, рекурсивно
# ДЗ - 4 (со звездочкой)
Создать модуль, который экспортирует функцию `scanDOM`.
`scanDOM` должна перебирать все узлы на странице и выводить в консоль статистику по элементам и классам на странице. Например:
Тэгов div: 10
Тэгов a: 5
Тэгов span: 10
Текстовых узлов: 100
Элементов с классом c1: 10
Элементов с классом c2: 20
Количеств и название классов/тегов заранее неизвестно. Функция сама должна определить количество и название тегов/классов.



Асинхронность:
1. ДЗ 1:
Создать модуль, который экспортирует функцию `timer`.
Функция `timer` должна возвращать новый промис.
Функция `timer` принимает 1 аргумент - количество миллисекунд, через которые промис должен перейти в состояние `fulfilled`.
Пример использования:
timer(3000).then(() => console.log('я вывелась через 3 секунды'))
2. ДЗ 2:
Загрузить города при помощи AJAX из https://raw.githubusercontent.com/smelukov/citiesTest/master/cities.json (сервер поддерживает AJAX CORS)
Отсортировать города по алфавиту и вывести на странице.
Использование промисов обязательно.
Запрещено использование любых библиотек (включая jQuery) и фреймворков.
3. ДЗ 3 (со звездочкой):
Создать страничку с текстовым полем.
После загрузки странички, загрузить список городов при помощи AJAX.
При вводе текста в тестовое поле, выводить под текстовым полем список тех городов, в названиях которых есть введенный текст.
Использование промисов обязательно.
Запрещено использование любых библиотек (включая jQuery) и фреймворков.



BOM:
1. ДЗ 1:
Создать страницу, которая выводит все имеющиеся cookie в виде таблицы (имя, значение).
Для каждой cookie в таблице, необходимо добавить кнопку "удалить", При нажатии на "удалить", на экран должен быть выведен confirm с текстом "Удалить cookie с именем …?". Вместо … необходимо подставить имя удаляемой cookie. Если пользователь ответил положительно, то соответствующая cookie должна быть удалена.
2. ДЗ 2:
К страничке из предыдущего задания необходимо добавить форму с текстовыми полями и кнопкой "добавить".
Список текстовых полей:
- имя
- значение
- срок годности (количество дней)
После нажатия на кнопку "добавить" должна быть создана (и добавлена в таблицу) новая cookie с указанными параметрами. Обратите внимание, что в поле "срок годности" указывается количество дней (начиная с текущего), на протяжении которых будет доступна cookie.
После добавление cookie, значения текстовых полей формы должны быть очищены.
Если какое-то из полей формы не заполнено, то, при нажатии на кнопку "добавить", cookie не должна быть создана, а на экран должен быть выведен alert с предупреждением "Заполните все поля формы".
Так же заметьте, что при работе с формой и таблицей, не должно быть перезагрузок страницы
3. ДЗ 3 (со звездочкой):
Взять результат ДЗ по теме DOM Events (страница с кнопкой для создания div'ов, которые можно перетаскивать при помощи D&D)
Добавить на страницу кнопку "сохранить". При нажатии на данную кнопку, количество, цвет и позиция всех div'ов должны быть сохранены в одну cookie.
После перезагрузки страницы, необходимо достать эту информацию из cookie и восстановить все div'ы (с их размерами, позицией и цветами)
